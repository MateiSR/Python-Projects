import pygame, sys
pygame.init()

class Paddle(pygame.sprite.Sprite):

    def __init__(self, color, width, height):
        # Constructor - sprite class
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([width, height])
        self.image.fill((0, 0, 0))
        # Draw paddle
        pygame.draw.rect(self.image, color, [0, 0, width, height])
        # Get rect object
        self.rect = self.image.get_rect()

class Pong:

    def __init__(self):
        global paddleA, paddleB, sprite_list, running
        # Define colors
        self.black = (0, 0, 0)
        self.white = (255, 255, 255)
        self.red = (255, 0, 0)
        self.green = (0, 255, 0)
        # Define player score
        self.score_p1 = 0
        self.score_p2 = 0
        # Open new window
        self.size = (700, 500)
        self.screen = pygame.display.set_mode(self.size)
        pygame.display.set_caption('Pong! 2D')
        # define running boolean
        running = True
        # clock updates screen
        self.clock = pygame.time.Clock()
        # paddles
        paddleA = Paddle(self.white, 10, 100)

        paddleB = Paddle(self.white, 10, 100)
        # sprite list
        sprite_list = pygame.sprite.Group()
        sprite_list.add(paddleA)
        sprite_list.add(paddleB)


    def start(self):
        global paddleA, paddleB, sprite_list, running
        while running == True:
            # Check for quit event
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    running = False

            sprite_list.update()

            self.screen.fill(self.black)
            pygame.draw.line(self.screen, self.white, (350, 0), (350, 500), 5)
            pygame.display.flip()

            self.clock.tick(60)

    def __del__(self):
        pygame.quit()
        print('Thanks for playing Pong! - 2D')
        print('Destructor called succesfully.')


game = Pong()
game.start()